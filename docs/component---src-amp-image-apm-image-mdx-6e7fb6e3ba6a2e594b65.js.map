{"version":3,"sources":["webpack:///../src/AmpImage/apm-image.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","image","aspectRatio","isMDXComponent"],"mappings":"4eASO,MAAMA,EAAe,Q,4MAE5B,MAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,aACL,0BAAYC,WAAW,MAAvB,iBACH,qIAAoH,0BAAYA,WAAW,KAAvB,eAApH,kBAA8L,0BAAYA,WAAW,KAAvB,UAA9L,8CAA+R,0BAAYA,WAAW,KAAvB,UAA/R,WAA6V,0BAAYA,WAAW,KAAvB,OAA7V,wDACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,kJAOL,wNACA,iBAAQ,CACN,GAAM,iDADR,iDAGA,YAAC,IAAD,CAAUC,MAAOA,IAAOC,YAAY,aAAaH,QAAQ,aACzD,kJAAiI,0BAAYC,WAAW,KAAvB,YAAjI,uBAA6M,0BAAYA,WAAW,KAAvB,QAA7M,gEACA,iBAAQ,CACN,GAAM,SADR,SAGA,iBAAQ,CACN,GAAM,SACL,0BAAYA,WAAW,MAAvB,UACH,sLACA,iBAAQ,CACN,GAAM,eACL,0BAAYA,WAAW,MAAvB,gBACH,uIAAsH,0BAAYA,WAAW,KAAvB,SAAtH,+EACA,sBACE,kBAAIA,WAAW,MAAf,UACA,kBAAIA,WAAW,MAAf,UACA,kBAAIA,WAAW,MAAf,aACA,kBAAIA,WAAW,MAAf,cACA,kBAAIA,WAAW,MAAf,YACA,kBAAIA,WAAW,MAAf,cAEF,iBAAQ,CACN,GAAM,gBACL,0BAAYA,WAAW,MAAvB,iBACH,4EAA2D,0BAAYA,WAAW,KAAvB,WAA3D,WACA,iBAAQ,CACN,GAAM,kBACL,0BAAYA,WAAW,MAAvB,mBACH,4FAA2E,0BAAYA,WAAW,KAAvB,SAA3E,2BACA,iBAAQ,CACN,GAAM,eACL,0BAAYA,WAAW,MAAvB,gBACH,8EAA6D,0BAAYA,WAAW,KAAvB,SAA7D,2BACA,iBAAQ,CACN,GAAM,OACL,0BAAYA,WAAW,MAAvB,QACH,iFAAgE,0BAAYA,WAAW,KAAvB,SAAhE,0BACA,iBAAQ,CACN,GAAM,SACL,0BAAYA,WAAW,MAAvB,UACH,sFAAqE,0BAAYA,WAAW,KAAvB,SAArE,0BACA,iBAAQ,CACN,GAAM,kBACL,0BAAYA,WAAW,MAAvB,mBACH,0HACA,iBAAQ,CACN,GAAM,iBACL,0BAAYA,WAAW,MAAvB,kBACH,+H,0MAKJJ,EAAWO,gBAAiB","file":"component---src-amp-image-apm-image-mdx-6e7fb6e3ba6a2e594b65.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/kthompson/Git/apm-mimas/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport AmpImage from '.';\nimport { image } from '../__testdata__/image';\nimport '../styles/image.module.scss';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"ampimage-\"\n    }}><inlineCode parentName=\"h1\">{`<AmpImage />`}</inlineCode></h1>\n    <p>{`A component that takes an endpoint from American Public Media's internal image API and turns it into a valid `}<inlineCode parentName=\"p\">{`<amp-img />`}</inlineCode>{` object with a `}<inlineCode parentName=\"p\">{`srcset`}</inlineCode>{` and proper sizing. It can also be given a `}<inlineCode parentName=\"p\">{`srcset`}</inlineCode>{` and/or `}<inlineCode parentName=\"p\">{`src`}</inlineCode>{` manually via the fallback props. For example, this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { AmpImage } from '@apmg/mimas'\nimport { imageData } from './data/image'\n\n<AmpImage image={imageData} aspectRatio='widescreen' />\n`}</code></pre>\n    <p>{`Would produce the following image (which won't appear on this docs site because I am not making this AMP, but you should be able to see the markup if you inspect this element in the browser).`}</p>\n    <h4 {...{\n      \"id\": \"right-click-below-to-examine-the-amp-goodness\"\n    }}>{`Right click below to examine the AMP goodness`}</h4>\n    <AmpImage image={image} aspectRatio='widescreen' mdxType=\"AmpImage\" />\n    <p>{`We include one inline style with the AMP Image because it's hard to think of a single scenario where we wouldn't want the `}<inlineCode parentName=\"p\">{`maxWidth`}</inlineCode>{` of the image to be `}<inlineCode parentName=\"p\">{`100%`}</inlineCode>{`, and it's a bit baffling that the visual breaks by default.`}</p>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <h3 {...{\n      \"id\": \"image\"\n    }}><inlineCode parentName=\"h3\">{`image`}</inlineCode></h3>\n    <p>{`A JSON endpoint from APM's Image API. If formatted as expected, this component will create the src, srcset, sizes, alt text, width, height, and aspect ratio.`}</p>\n    <h3 {...{\n      \"id\": \"aspectratio\"\n    }}><inlineCode parentName=\"h3\">{`aspectRatio`}</inlineCode></h3>\n    <p>{`Allows you to manually select one of the aspect ratios provided in the image endpoint. Can only be used if the `}<inlineCode parentName=\"p\">{`image`}</inlineCode>{` property data is provided and valid. Accepts one of the following strings:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`normal`}</li>\n      <li parentName=\"ul\">{`square`}</li>\n      <li parentName=\"ul\">{`thumbnail`}</li>\n      <li parentName=\"ul\">{`widescreen`}</li>\n      <li parentName=\"ul\">{`portrait`}</li>\n      <li parentName=\"ul\">{`uncropped`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"elementclass\"\n    }}><inlineCode parentName=\"h3\">{`elementClass`}</inlineCode></h3>\n    <p>{`Accepts a string that will set the className of the `}<inlineCode parentName=\"p\">{`<img />`}</inlineCode>{` object`}</p>\n    <h3 {...{\n      \"id\": \"fallbacksrcset\"\n    }}><inlineCode parentName=\"h3\">{`fallbackSrcSet`}</inlineCode></h3>\n    <p>{`Accepts a srcset string and overrides any srcset generated from the `}<inlineCode parentName=\"p\">{`image`}</inlineCode>{` prop (if applicable). `}</p>\n    <h3 {...{\n      \"id\": \"fallbacksrc\"\n    }}><inlineCode parentName=\"h3\">{`fallbackSrc`}</inlineCode></h3>\n    <p>{`Accepts a URL string and overrides any src set by the `}<inlineCode parentName=\"p\">{`image`}</inlineCode>{` prop (if applicable). `}</p>\n    <h3 {...{\n      \"id\": \"alt\"\n    }}><inlineCode parentName=\"h3\">{`alt`}</inlineCode></h3>\n    <p>{`Accepts a string and overrides any alt phrase set by the `}<inlineCode parentName=\"p\">{`image`}</inlineCode>{` prop (if applicable).`}</p>\n    <h3 {...{\n      \"id\": \"sizes\"\n    }}><inlineCode parentName=\"h3\">{`sizes`}</inlineCode></h3>\n    <p>{`Accepts a string and overrides any sizes attribute set by the `}<inlineCode parentName=\"p\">{`image`}</inlineCode>{` prop (if applicable).`}</p>\n    <h3 {...{\n      \"id\": \"fallbackheight\"\n    }}><inlineCode parentName=\"h3\">{`fallbackHeight`}</inlineCode></h3>\n    <p>{`Accepts a string with a number. Allows you to manually provide the height mandatory on AMP pages.`}</p>\n    <h3 {...{\n      \"id\": \"fallbackwidth\"\n    }}><inlineCode parentName=\"h3\">{`fallbackWidth`}</inlineCode></h3>\n    <p>{`Accepts a string with a number. Allows you to manually provide the width mandatory on AMP pages.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}