(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{MpE5:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return r})),a.d(t,"default",(function(){return s}));a("W1QL"),a("t91x"),a("mXGw");var n=a("/FXl"),i=a("TjRS"),l=a("CbNZ"),b=a("orGU");a("ougK"),a("aD51");function c(){return(c=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e}).apply(this,arguments)}const r={};void 0!==r&&r&&r===Object(r)&&Object.isExtensible(r)&&!r.hasOwnProperty("__filemeta")&&Object.defineProperty(r,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/AmpImage/apm-image.mdx"}});const o={_frontmatter:r},p=i.a;function s(e){let t=e.components,a=function(e,t){if(null==e)return{};var a,n,i={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,["components"]);return Object(n.b)(p,c({},o,a,{components:t,mdxType:"MDXLayout"}),Object(n.b)("h1",{id:"ampimage-"},Object(n.b)("inlineCode",{parentName:"h1"},"<AmpImage />")),Object(n.b)("p",null,"A component that takes an endpoint from American Public Media's internal image API and turns it into a valid ",Object(n.b)("inlineCode",{parentName:"p"},"<amp-img />")," object with a ",Object(n.b)("inlineCode",{parentName:"p"},"srcset")," and proper sizing. It can also be given a ",Object(n.b)("inlineCode",{parentName:"p"},"srcset")," and/or ",Object(n.b)("inlineCode",{parentName:"p"},"src")," manually via the fallback props. For example, this:"),Object(n.b)("pre",null,Object(n.b)("code",c({parentName:"pre"},{className:"language-javascript"}),"import { AmpImage } from '@apmg/mimas'\nimport { imageData } from './data/image'\n\n<AmpImage image={imageData} aspectRatio='widescreen' />\n")),Object(n.b)("p",null,"Would produce the following image (which won't appear on this docs site because I am not making this AMP, but you should be able to see the markup if you inspect this element in the browser)."),Object(n.b)("h4",{id:"right-click-below-to-examine-the-amp-goodness"},"Right click below to examine the AMP goodness"),Object(n.b)(l.a,{image:b.a,aspectRatio:"widescreen",mdxType:"AmpImage"}),Object(n.b)("p",null,"We include one inline style with the AMP Image because it's hard to think of a single scenario where we wouldn't want the ",Object(n.b)("inlineCode",{parentName:"p"},"maxWidth")," of the image to be ",Object(n.b)("inlineCode",{parentName:"p"},"100%"),", and it's a bit baffling that the visual breaks by default."),Object(n.b)("h2",{id:"props"},"Props"),Object(n.b)("h3",{id:"image"},Object(n.b)("inlineCode",{parentName:"h3"},"image")),Object(n.b)("p",null,"A JSON endpoint from APM's Image API. If formatted as expected, this component will create the src, srcset, sizes, alt text, width, height, and aspect ratio."),Object(n.b)("h3",{id:"aspectratio"},Object(n.b)("inlineCode",{parentName:"h3"},"aspectRatio")),Object(n.b)("p",null,"Allows you to manually select one of the aspect ratios provided in the image endpoint. Can only be used if the ",Object(n.b)("inlineCode",{parentName:"p"},"image")," property data is provided and valid. Accepts one of the following strings:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"normal"),Object(n.b)("li",{parentName:"ul"},"square"),Object(n.b)("li",{parentName:"ul"},"thumbnail"),Object(n.b)("li",{parentName:"ul"},"widescreen"),Object(n.b)("li",{parentName:"ul"},"portrait"),Object(n.b)("li",{parentName:"ul"},"uncropped")),Object(n.b)("h3",{id:"elementclass"},Object(n.b)("inlineCode",{parentName:"h3"},"elementClass")),Object(n.b)("p",null,"Accepts a string that will set the className of the ",Object(n.b)("inlineCode",{parentName:"p"},"<img />")," object"),Object(n.b)("h3",{id:"fallbacksrcset"},Object(n.b)("inlineCode",{parentName:"h3"},"fallbackSrcSet")),Object(n.b)("p",null,"Accepts a srcset string and overrides any srcset generated from the ",Object(n.b)("inlineCode",{parentName:"p"},"image")," prop (if applicable). "),Object(n.b)("h3",{id:"fallbacksrc"},Object(n.b)("inlineCode",{parentName:"h3"},"fallbackSrc")),Object(n.b)("p",null,"Accepts a URL string and overrides any src set by the ",Object(n.b)("inlineCode",{parentName:"p"},"image")," prop (if applicable). "),Object(n.b)("h3",{id:"alt"},Object(n.b)("inlineCode",{parentName:"h3"},"alt")),Object(n.b)("p",null,"Accepts a string and overrides any alt phrase set by the ",Object(n.b)("inlineCode",{parentName:"p"},"image")," prop (if applicable)."),Object(n.b)("h3",{id:"sizes"},Object(n.b)("inlineCode",{parentName:"h3"},"sizes")),Object(n.b)("p",null,"Accepts a string and overrides any sizes attribute set by the ",Object(n.b)("inlineCode",{parentName:"p"},"image")," prop (if applicable)."),Object(n.b)("h3",{id:"fallbackheight"},Object(n.b)("inlineCode",{parentName:"h3"},"fallbackHeight")),Object(n.b)("p",null,"Accepts a string with a number. Allows you to manually provide the height mandatory on AMP pages."),Object(n.b)("h3",{id:"fallbackwidth"},Object(n.b)("inlineCode",{parentName:"h3"},"fallbackWidth")),Object(n.b)("p",null,"Accepts a string with a number. Allows you to manually provide the width mandatory on AMP pages."))}void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!s.hasOwnProperty("__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/AmpImage/apm-image.mdx"}}),s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-amp-image-apm-image-mdx-6e7fb6e3ba6a2e594b65.js.map