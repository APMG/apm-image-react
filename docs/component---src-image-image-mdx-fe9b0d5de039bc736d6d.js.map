{"version":3,"sources":["webpack:///../src/Image/image.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","image","aspectRatio","isMDXComponent"],"mappings":"4eASO,MAAMA,EAAe,Q,qMAE5B,MAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,UACL,0BAAYC,WAAW,MAAvB,cACH,qIAAoH,0BAAYA,WAAW,KAAvB,WAApH,kBAA0L,0BAAYA,WAAW,KAAvB,UAA1L,8CAA2R,0BAAYA,WAAW,KAAvB,UAA3R,WAAyV,0BAAYA,WAAW,KAAvB,OAAzV,wDACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,4IAOL,2DACA,YAAC,IAAD,CAAOC,MAAOA,IAAOC,YAAY,aAAaH,QAAQ,UACtD,mJAAkI,mBAAGC,WAAW,KAAQ,CACpJ,KAAQ,WADsH,SAAlI,UAGA,iBAAQ,CACN,GAAM,SADR,SAGA,iBAAQ,CACN,GAAM,SACL,0BAAYA,WAAW,MAAvB,UACH,uKACA,iBAAQ,CACN,GAAM,eACL,0BAAYA,WAAW,MAAvB,gBACH,uIAAsH,0BAAYA,WAAW,KAAvB,SAAtH,+EACA,sBACE,kBAAIA,WAAW,MAAf,UACA,kBAAIA,WAAW,MAAf,UACA,kBAAIA,WAAW,MAAf,aACA,kBAAIA,WAAW,MAAf,cACA,kBAAIA,WAAW,MAAf,YACA,kBAAIA,WAAW,MAAf,cAEF,iBAAQ,CACN,GAAM,kBACL,0BAAYA,WAAW,MAAvB,mBACH,4FAA2E,0BAAYA,WAAW,KAAvB,SAA3E,2BACA,iBAAQ,CACN,GAAM,eACL,0BAAYA,WAAW,MAAvB,gBACH,8EAA6D,0BAAYA,WAAW,KAAvB,SAA7D,2BACA,iBAAQ,CACN,GAAM,OACL,0BAAYA,WAAW,MAAvB,QACH,iFAAgE,0BAAYA,WAAW,KAAvB,SAAhE,0BACA,iBAAQ,CACN,GAAM,SACL,0BAAYA,WAAW,MAAvB,UACH,sFAAqE,0BAAYA,WAAW,KAAvB,SAArE,gC,mMAKJJ,EAAWO,gBAAiB","file":"component---src-image-image-mdx-fe9b0d5de039bc736d6d.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/kthompson/Git/apm-mimas/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport Image from '.';\nimport { image } from '../__testdata__/image';\nimport '../styles/image.module.scss';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"image-\"\n    }}><inlineCode parentName=\"h1\">{`<Image />`}</inlineCode></h1>\n    <p>{`A component that takes an endpoint from American Public Media's internal image API and turns it into a valid `}<inlineCode parentName=\"p\">{`<img />`}</inlineCode>{` object with a `}<inlineCode parentName=\"p\">{`srcset`}</inlineCode>{` and proper sizing. It can also be given a `}<inlineCode parentName=\"p\">{`srcset`}</inlineCode>{` and/or `}<inlineCode parentName=\"p\">{`src`}</inlineCode>{` manually via the fallback props. For example, this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { Image } from '@apmg/mimas'\nimport { imageData } from './data/image'\n\n<Image image={imageData} aspectRatio='widescreen' />\n`}</code></pre>\n    <p>{`Would produce the following image:`}</p>\n    <Image image={image} aspectRatio='widescreen' mdxType=\"Image\" />\n    <p>{`Most of the logic that parses the image data to either find or generate the required image information can be found on the `}<a parentName=\"p\" {...{\n        \"href\": \"/utils\"\n      }}>{`utils`}</a>{` page.`}</p>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <h3 {...{\n      \"id\": \"image\"\n    }}><inlineCode parentName=\"h3\">{`image`}</inlineCode></h3>\n    <p>{`A JSON endpoint from APM's Image API. If formatted as expected, this component will create the src, srcset, sizes, alt text, and aspect ratio.`}</p>\n    <h3 {...{\n      \"id\": \"aspectratio\"\n    }}><inlineCode parentName=\"h3\">{`aspectRatio`}</inlineCode></h3>\n    <p>{`Allows you to manually select one of the aspect ratios provided in the image endpoint. Can only be used if the `}<inlineCode parentName=\"p\">{`image`}</inlineCode>{` property data is provided and valid. Accepts one of the following strings:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`normal`}</li>\n      <li parentName=\"ul\">{`square`}</li>\n      <li parentName=\"ul\">{`thumbnail`}</li>\n      <li parentName=\"ul\">{`widescreen`}</li>\n      <li parentName=\"ul\">{`portrait`}</li>\n      <li parentName=\"ul\">{`uncropped`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"fallbacksrcset\"\n    }}><inlineCode parentName=\"h3\">{`fallbackSrcSet`}</inlineCode></h3>\n    <p>{`Accepts a srcset string and overrides any srcset generated from the `}<inlineCode parentName=\"p\">{`image`}</inlineCode>{` prop (if applicable). `}</p>\n    <h3 {...{\n      \"id\": \"fallbacksrc\"\n    }}><inlineCode parentName=\"h3\">{`fallbackSrc`}</inlineCode></h3>\n    <p>{`Accepts a URL string and overrides any src set by the `}<inlineCode parentName=\"p\">{`image`}</inlineCode>{` prop (if applicable). `}</p>\n    <h3 {...{\n      \"id\": \"alt\"\n    }}><inlineCode parentName=\"h3\">{`alt`}</inlineCode></h3>\n    <p>{`Accepts a string and overrides any alt phrase set by the `}<inlineCode parentName=\"p\">{`image`}</inlineCode>{` prop (if applicable).`}</p>\n    <h3 {...{\n      \"id\": \"sizes\"\n    }}><inlineCode parentName=\"h3\">{`sizes`}</inlineCode></h3>\n    <p>{`Accepts a string and overrides any sizes attribute set by the `}<inlineCode parentName=\"p\">{`image`}</inlineCode>{` prop (if applicable).`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}